function c(f,n){if(f.length===0)return[];n===void 0&&(n=i=>i);const t=[];let u=[],e;for(let i=0;i<f.length;i++){const l=n(f[i],i,f);e!==l&&(e=l,u.length>0&&(t.push(u),u=[])),u.push(f[i])}return u.length>0&&t.push(u),t}function g(f,n,t,u=1){n<0&&(n=Math.max(0,f.length+n)),n>f.length&&(n=f.length),t&&t<0&&(t=Math.max(0,f.length+t)),(t===void 0||t>f.length)&&(t=f.length);let e=!1;n>t&&(n--,t--,e=!0);let i=n;const l=[];for(;!e&&i<t||e&&i>t;)l.push(f[i]),i+=i<t?1*u:-1*u;return l}function h(f,n,t){return f===void 0||n<0||n>=f.length?t:f[n]}function o(f,n){f.forEach((t,u)=>t.forEach((e,i)=>{n(e,u,i,f)}))}function r(f,n){const t=[];return o(f,(u,e,i,l)=>{n(u,e,i,l)&&t.push({row:e,col:i})}),t}function p(f,n,t){return[{row:n+1,col:t},{row:n-1,col:t},{row:n,col:t+1},{row:n,col:t-1}].filter(e=>s(f,e.row,e.col))}function s(f,n,t){return n>=0&&n<f.length&&t>=0&&t<f[n].length}function v(f,n){return c(f,t=>t!==n).filter(t=>h(t,0,n)!==n)}export{o as a,g as b,p as c,r as f,v as s};
